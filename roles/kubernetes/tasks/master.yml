    - name: Ensure /etc/kubernetes directory exists
      ansible.builtin.file:
        path: /etc/kubernetes
        state: directory
        owner: root
        group: root
        mode: '0755'
    
    - name: Create an Empty file for Kubeadm configuring
      copy:
        content: ""
        dest: /etc/kubernetes/kubeadm-config.yaml
        force: no

    - name: Configure container runtime
      blockinfile:
        path: /etc/kubernetes/kubeadm-config.yaml
        block: |
          kind: ClusterConfiguration
          apiVersion: kubeadm.k8s.io/v1beta3
          networking:
            podSubnet: "10.244.0.0/16"
          ---
          kind: KubeletConfiguration
          apiVersion: kubelet.config.k8s.io/v1beta1
          runtimeRequestTimeout: "15m"
          cgroupDriver: "systemd"
          systemReserved:
            cpu: 100m
            memory: 350M
          kubeReserved:
            cpu: 100m
            memory: 50M
          enforceNodeAllocatable:
          - pods

    - name: Reset kubeadm (cleanup previous cluster)
      shell: kubeadm reset -f
      ignore_errors: yes

    - name: Remove old Kubernetes data
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /var/lib/etcd
        - /var/lib/cni
        - /etc/cni/net.d

    - name: Create .kube directory
      become_user: ubuntu
      file:
        path: "/home/{{ ansible_user }}/.kube"
        state: directory
        mode: 0755

    - name: Initialize the cluster
      shell: "kubeadm init --config /etc/kubernetes/kubeadm-config.yaml"
      args:
        chdir: "/home/{{ ansible_user }}/.kube"
        
    - name: Copy admin.conf to User's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ ansible_user }}/.kube/config"
        remote_src: yes
        owner: ubuntu

    - name: Install Pod Network
      become_user: ubuntu
      shell: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml >> pod_network_setup.log
      args:
        chdir: "/home/{{ ansible_user }}"
        creates: pod_network_setup.log